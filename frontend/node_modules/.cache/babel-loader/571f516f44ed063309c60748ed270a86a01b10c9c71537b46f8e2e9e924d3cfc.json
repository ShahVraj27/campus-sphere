{"ast":null,"code":"var _jsxFileName = \"C:\\\\Vraj\\\\Academics\\\\2-2\\\\DBMS\\\\trial\\\\campus-sphere\\\\frontend\\\\src\\\\pages\\\\Chats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Typography, Box, Paper, Grid, TextField, List, ListItem, ListItemAvatar, ListItemText, Avatar, Divider, IconButton, Button, CircularProgress, Alert, Menu, MenuItem } from '@mui/material';\nimport { Send as SendIcon, MoreVert as MoreVertIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport { useAuth } from '../context/AuthContext';\nimport chatService from '../services/chat.service';\nimport friendService from '../services/friend.service';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chats = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [friends, setFriends] = useState([]);\n  const [conversations, setConversations] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [messageLoading, setMessageLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Polling interval for new messages (in milliseconds)\n  const POLLING_INTERVAL = 5000;\n\n  // Setup polling for new messages\n  useEffect(() => {\n    let interval;\n    if (selectedChat) {\n      // Initial fetch\n      fetchMessages(selectedChat.chat_id);\n\n      // Set up polling\n      interval = setInterval(() => {\n        fetchMessages(selectedChat.chat_id, true);\n      }, POLLING_INTERVAL);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [selectedChat]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Fetch initial data: friends and conversations\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [friendsResponse, conversationsResponse] = await Promise.all([friendService.getFriends(), chatService.getConversations()]);\n        setFriends(friendsResponse.data);\n        setConversations(conversationsResponse.data);\n\n        // Auto-select first conversation if available\n        if (conversationsResponse.data.length > 0) {\n          setSelectedChat(conversationsResponse.data[0]);\n        }\n      } catch (err) {\n        console.error('Error fetching initial data:', err);\n        setError('Failed to load chat data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Fetch messages for a chat\n  const fetchMessages = async (chatId, silent = false) => {\n    if (!silent) setMessageLoading(true);\n    try {\n      const response = await chatService.getMessages(chatId);\n      setMessages(response.data);\n    } catch (err) {\n      console.error('Error fetching messages:', err);\n      if (!silent) {\n        setError('Failed to load messages. Please try again.');\n\n        // Reset error message after 3 seconds\n        setTimeout(() => {\n          setError(null);\n        }, 3000);\n      }\n    } finally {\n      if (!silent) setMessageLoading(false);\n    }\n  };\n\n  // Handle sending a message\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!message.trim() || !selectedChat) return;\n    try {\n      await chatService.sendMessage(selectedChat.chat_id, {\n        content: message\n      });\n\n      // Refresh messages\n      await fetchMessages(selectedChat.chat_id);\n\n      // Clear input\n      setMessage('');\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Failed to send message. Please try again.');\n\n      // Reset error message after 3 seconds\n      setTimeout(() => {\n        setError(null);\n      }, 3000);\n    }\n  };\n\n  // Start a new conversation\n  const startConversation = async friendId => {\n    try {\n      const response = await chatService.createConversation(friendId);\n\n      // Refresh conversations list\n      const conversationsResponse = await chatService.getConversations();\n      setConversations(conversationsResponse.data);\n\n      // Select the new conversation\n      const newChat = conversationsResponse.data.find(chat => chat.chat_id === response.data.chat_id);\n      if (newChat) setSelectedChat(newChat);\n    } catch (err) {\n      console.error('Error starting conversation:', err);\n      setError('Failed to start conversation. Please try again.');\n\n      // Reset error message after 3 seconds\n      setTimeout(() => {\n        setError(null);\n      }, 3000);\n    }\n  };\n\n  // Handle menu open/close\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  // Handle deleting a conversation\n  const handleDeleteConversation = async () => {\n    if (!selectedChat) return;\n    try {\n      await chatService.deleteConversation(selectedChat.chat_id);\n\n      // Refresh conversations list\n      const conversationsResponse = await chatService.getConversations();\n      setConversations(conversationsResponse.data);\n\n      // Clear selected chat and messages\n      setSelectedChat(null);\n      setMessages([]);\n      handleMenuClose();\n    } catch (err) {\n      console.error('Error deleting conversation:', err);\n      setError('Failed to delete conversation. Please try again.');\n\n      // Reset error message after 3 seconds\n      setTimeout(() => {\n        setError(null);\n      }, 3000);\n    }\n  };\n\n  // Format timestamp for display\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Find friends who don't have a conversation yet\n  const getFriendsWithoutConversation = () => {\n    return friends.filter(friend => !conversations.some(conv => conv.participants.some(p => p.id_no === friend.id_no)));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"70vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"Connect with your friends through messaging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 0,\n        borderRadius: 2,\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          sx: {\n            borderRight: '1px solid #e0e0e0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              borderBottom: '1px solid #e0e0e0',\n              backgroundColor: '#f5f5f5'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Conversations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), conversations.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              gutterBottom: true,\n              children: \"No conversations yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Start a conversation with a friend from the list below.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              p: 0\n            },\n            children: conversations.map(chat => {\n              // Find the other participant (not the current user)\n              const otherParticipant = chat.participants.find(p => p.id_no !== user.id_no);\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                onClick: () => setSelectedChat(chat),\n                selected: (selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.chat_id) === chat.chat_id,\n                sx: {\n                  backgroundColor: (selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.chat_id) === chat.chat_id ? 'rgba(0, 0, 0, 0.04)' : 'transparent',\n                  '&:hover': {\n                    backgroundColor: 'rgba(0, 0, 0, 0.08)'\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: otherParticipant.name.charAt(0).toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: otherParticipant.name,\n                  secondary: chat.last_message ? `${chat.last_message.content.substring(0, 30)}${chat.last_message.content.length > 30 ? '...' : ''}` : 'No messages yet'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 23\n                }, this)]\n              }, chat.chat_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              borderTop: '1px solid #e0e0e0',\n              backgroundColor: '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Start a new conversation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), getFriendsWithoutConversation().length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"You have conversations with all your friends.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: getFriendsWithoutConversation().map(friend => /*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                onClick: () => startConversation(friend.id_no),\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      width: 32,\n                      height: 32\n                    },\n                    children: friend.name.charAt(0).toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: friend.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this)]\n              }, friend.id_no, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                borderBottom: '1px solid #e0e0e0',\n                backgroundColor: '#f5f5f5',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    mr: 1\n                  },\n                  children: selectedChat.participants.find(p => p.id_no !== user.id_no).name.charAt(0).toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: selectedChat.participants.find(p => p.id_no !== user.id_no).name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleMenuClick,\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                anchorEl: anchorEl,\n                open: Boolean(anchorEl),\n                onClose: handleMenuClose,\n                children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleDeleteConversation,\n                  children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    fontSize: \"small\",\n                    sx: {\n                      mr: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 23\n                  }, this), \"Delete Conversation\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                height: 'calc(70vh - 128px)',\n                overflowY: 'auto',\n                display: 'flex',\n                flexDirection: 'column'\n              },\n              children: [messageLoading ? /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                flexGrow: 1,\n                children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 21\n              }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                flexGrow: 1,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  color: \"text.secondary\",\n                  children: \"No messages yet. Start the conversation!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this) : messages.map((msg, index) => {\n                const isCurrentUser = msg.sender.id_no === user.id_no;\n                return /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: isCurrentUser ? 'flex-end' : 'flex-start',\n                    mb: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      backgroundColor: isCurrentUser ? '#1976d2' : '#f1f1f1',\n                      color: isCurrentUser ? 'white' : 'inherit',\n                      borderRadius: 2,\n                      px: 2,\n                      py: 1,\n                      maxWidth: '70%'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      children: msg.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      display: \"block\",\n                      sx: {\n                        textAlign: 'right',\n                        opacity: 0.8\n                      },\n                      children: formatTimestamp(msg.timestamp)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 416,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 27\n                  }, this)\n                }, msg.message_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 25\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messagesEndRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                borderTop: '1px solid #e0e0e0'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSendMessage,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      placeholder: \"Type a message\",\n                      variant: \"outlined\",\n                      value: message,\n                      onChange: e => setMessage(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      variant: \"contained\",\n                      color: \"primary\",\n                      endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 36\n                      }, this),\n                      disabled: !message.trim(),\n                      children: \"Send\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            minHeight: \"70vh\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Select a conversation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: \"Choose a conversation from the list or start a new one.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s(Chats, \"K7meqSCY3pInnXsI6+jQsw8E8C4=\", false, function () {\n  return [useAuth];\n});\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Typography","Box","Paper","Grid","TextField","List","ListItem","ListItemAvatar","ListItemText","Avatar","Divider","IconButton","Button","CircularProgress","Alert","Menu","MenuItem","Send","SendIcon","MoreVert","MoreVertIcon","Delete","DeleteIcon","useAuth","chatService","friendService","jsxDEV","_jsxDEV","Fragment","_Fragment","Chats","_s","user","friends","setFriends","conversations","setConversations","selectedChat","setSelectedChat","messages","setMessages","message","setMessage","loading","setLoading","messageLoading","setMessageLoading","error","setError","anchorEl","setAnchorEl","messagesEndRef","POLLING_INTERVAL","interval","fetchMessages","chat_id","setInterval","clearInterval","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchData","friendsResponse","conversationsResponse","Promise","all","getFriends","getConversations","data","length","err","console","chatId","silent","response","getMessages","setTimeout","handleSendMessage","e","preventDefault","trim","sendMessage","content","startConversation","friendId","createConversation","newChat","find","chat","handleMenuClick","event","currentTarget","handleMenuClose","handleDeleteConversation","deleteConversation","formatTimestamp","timestamp","date","Date","toLocaleTimeString","hour","minute","getFriendsWithoutConversation","filter","friend","some","conv","participants","p","id_no","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","mb","variant","component","gutterBottom","color","severity","borderRadius","overflow","container","item","xs","md","borderRight","borderBottom","backgroundColor","textAlign","map","otherParticipant","button","onClick","selected","name","charAt","toUpperCase","primary","secondary","last_message","substring","borderTop","dense","width","height","mr","open","Boolean","onClose","fontSize","overflowY","flexDirection","flexGrow","msg","index","isCurrentUser","sender","px","py","opacity","message_id","ref","onSubmit","spacing","fullWidth","placeholder","value","onChange","target","type","endIcon","disabled","_c","$RefreshReg$"],"sources":["C:/Vraj/Academics/2-2/DBMS/trial/campus-sphere/frontend/src/pages/Chats.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Grid,\r\n  TextField,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Divider,\r\n  IconButton,\r\n  Button,\r\n  CircularProgress,\r\n  Alert,\r\n  Menu,\r\n  MenuItem,\r\n} from '@mui/material';\r\nimport {\r\n  Send as SendIcon,\r\n  MoreVert as MoreVertIcon,\r\n  Delete as DeleteIcon,\r\n} from '@mui/icons-material';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport chatService from '../services/chat.service';\r\nimport friendService from '../services/friend.service';\r\n\r\nconst Chats = () => {\r\n  const { user } = useAuth();\r\n  const [friends, setFriends] = useState([]);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [messageLoading, setMessageLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  \r\n  // Polling interval for new messages (in milliseconds)\r\n  const POLLING_INTERVAL = 5000;\r\n  \r\n  // Setup polling for new messages\r\n  useEffect(() => {\r\n    let interval;\r\n    \r\n    if (selectedChat) {\r\n      // Initial fetch\r\n      fetchMessages(selectedChat.chat_id);\r\n      \r\n      // Set up polling\r\n      interval = setInterval(() => {\r\n        fetchMessages(selectedChat.chat_id, true);\r\n      }, POLLING_INTERVAL);\r\n    }\r\n    \r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n    };\r\n  }, [selectedChat]);\r\n  \r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  \r\n  // Fetch initial data: friends and conversations\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [friendsResponse, conversationsResponse] = await Promise.all([\r\n          friendService.getFriends(),\r\n          chatService.getConversations(),\r\n        ]);\r\n        \r\n        setFriends(friendsResponse.data);\r\n        setConversations(conversationsResponse.data);\r\n        \r\n        // Auto-select first conversation if available\r\n        if (conversationsResponse.data.length > 0) {\r\n          setSelectedChat(conversationsResponse.data[0]);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching initial data:', err);\r\n        setError('Failed to load chat data. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n  \r\n  // Fetch messages for a chat\r\n  const fetchMessages = async (chatId, silent = false) => {\r\n    if (!silent) setMessageLoading(true);\r\n    \r\n    try {\r\n      const response = await chatService.getMessages(chatId);\r\n      setMessages(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching messages:', err);\r\n      if (!silent) {\r\n        setError('Failed to load messages. Please try again.');\r\n        \r\n        // Reset error message after 3 seconds\r\n        setTimeout(() => {\r\n          setError(null);\r\n        }, 3000);\r\n      }\r\n    } finally {\r\n      if (!silent) setMessageLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Handle sending a message\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!message.trim() || !selectedChat) return;\r\n    \r\n    try {\r\n      await chatService.sendMessage(selectedChat.chat_id, { content: message });\r\n      \r\n      // Refresh messages\r\n      await fetchMessages(selectedChat.chat_id);\r\n      \r\n      // Clear input\r\n      setMessage('');\r\n    } catch (err) {\r\n      console.error('Error sending message:', err);\r\n      setError('Failed to send message. Please try again.');\r\n      \r\n      // Reset error message after 3 seconds\r\n      setTimeout(() => {\r\n        setError(null);\r\n      }, 3000);\r\n    }\r\n  };\r\n  \r\n  // Start a new conversation\r\n  const startConversation = async (friendId) => {\r\n    try {\r\n      const response = await chatService.createConversation(friendId);\r\n      \r\n      // Refresh conversations list\r\n      const conversationsResponse = await chatService.getConversations();\r\n      setConversations(conversationsResponse.data);\r\n      \r\n      // Select the new conversation\r\n      const newChat = conversationsResponse.data.find(\r\n        chat => chat.chat_id === response.data.chat_id\r\n      );\r\n      if (newChat) setSelectedChat(newChat);\r\n    } catch (err) {\r\n      console.error('Error starting conversation:', err);\r\n      setError('Failed to start conversation. Please try again.');\r\n      \r\n      // Reset error message after 3 seconds\r\n      setTimeout(() => {\r\n        setError(null);\r\n      }, 3000);\r\n    }\r\n  };\r\n  \r\n  // Handle menu open/close\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  \r\n  // Handle deleting a conversation\r\n  const handleDeleteConversation = async () => {\r\n    if (!selectedChat) return;\r\n    \r\n    try {\r\n      await chatService.deleteConversation(selectedChat.chat_id);\r\n      \r\n      // Refresh conversations list\r\n      const conversationsResponse = await chatService.getConversations();\r\n      setConversations(conversationsResponse.data);\r\n      \r\n      // Clear selected chat and messages\r\n      setSelectedChat(null);\r\n      setMessages([]);\r\n      \r\n      handleMenuClose();\r\n    } catch (err) {\r\n      console.error('Error deleting conversation:', err);\r\n      setError('Failed to delete conversation. Please try again.');\r\n      \r\n      // Reset error message after 3 seconds\r\n      setTimeout(() => {\r\n        setError(null);\r\n      }, 3000);\r\n    }\r\n  };\r\n  \r\n  // Format timestamp for display\r\n  const formatTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n  \r\n  // Find friends who don't have a conversation yet\r\n  const getFriendsWithoutConversation = () => {\r\n    return friends.filter(friend => \r\n      !conversations.some(conv => \r\n        conv.participants.some(p => p.id_no === friend.id_no)\r\n      )\r\n    );\r\n  };\r\n  \r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"70vh\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box sx={{ mb: 4 }}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          Chats\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"text.secondary\">\r\n          Connect with your friends through messaging\r\n        </Typography>\r\n      </Box>\r\n      \r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      <Paper sx={{ p: 0, borderRadius: 2, overflow: 'hidden' }}>\r\n        <Grid container>\r\n          {/* Conversations List Sidebar */}\r\n          <Grid item xs={12} md={4} sx={{ borderRight: '1px solid #e0e0e0' }}>\r\n            <Box sx={{ p: 2, borderBottom: '1px solid #e0e0e0', backgroundColor: '#f5f5f5' }}>\r\n              <Typography variant=\"h6\">Conversations</Typography>\r\n            </Box>\r\n            \r\n            {conversations.length === 0 ? (\r\n              <Box sx={{ p: 2, textAlign: 'center' }}>\r\n                <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\r\n                  No conversations yet.\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Start a conversation with a friend from the list below.\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <List sx={{ p: 0 }}>\r\n                {conversations.map((chat) => {\r\n                  // Find the other participant (not the current user)\r\n                  const otherParticipant = chat.participants.find(\r\n                    p => p.id_no !== user.id_no\r\n                  );\r\n                  \r\n                  return (\r\n                    <ListItem\r\n                      key={chat.chat_id}\r\n                      button\r\n                      onClick={() => setSelectedChat(chat)}\r\n                      selected={selectedChat?.chat_id === chat.chat_id}\r\n                      sx={{\r\n                        backgroundColor: selectedChat?.chat_id === chat.chat_id \r\n                          ? 'rgba(0, 0, 0, 0.04)' \r\n                          : 'transparent',\r\n                        '&:hover': {\r\n                          backgroundColor: 'rgba(0, 0, 0, 0.08)',\r\n                        },\r\n                      }}\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          {otherParticipant.name.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText \r\n                        primary={otherParticipant.name} \r\n                        secondary={\r\n                          chat.last_message \r\n                            ? `${chat.last_message.content.substring(0, 30)}${chat.last_message.content.length > 30 ? '...' : ''}` \r\n                            : 'No messages yet'\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            )}\r\n            \r\n            {/* Friends without conversations */}\r\n            <Box sx={{ p: 2, borderTop: '1px solid #e0e0e0', backgroundColor: '#f5f5f5' }}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Start a new conversation\r\n              </Typography>\r\n              \r\n              {getFriendsWithoutConversation().length === 0 ? (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  You have conversations with all your friends.\r\n                </Typography>\r\n              ) : (\r\n                <List dense>\r\n                  {getFriendsWithoutConversation().map((friend) => (\r\n                    <ListItem\r\n                      key={friend.id_no}\r\n                      button\r\n                      onClick={() => startConversation(friend.id_no)}\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar sx={{ width: 32, height: 32 }}>\r\n                          {friend.name.charAt(0).toUpperCase()}\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText primary={friend.name} />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n          \r\n          {/* Chat window */}\r\n          <Grid item xs={12} md={8}>\r\n            {selectedChat ? (\r\n              <>\r\n                {/* Chat header */}\r\n                <Box sx={{ \r\n                  p: 2, \r\n                  borderBottom: '1px solid #e0e0e0', \r\n                  backgroundColor: '#f5f5f5',\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center'\r\n                }}>\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <Avatar sx={{ mr: 1 }}>\r\n                      {selectedChat.participants.find(p => p.id_no !== user.id_no).name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                    <Typography variant=\"h6\">\r\n                      {selectedChat.participants.find(p => p.id_no !== user.id_no).name}\r\n                    </Typography>\r\n                  </Box>\r\n                  \r\n                  <IconButton onClick={handleMenuClick}>\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n                  \r\n                  <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleMenuClose}\r\n                  >\r\n                    <MenuItem onClick={handleDeleteConversation}>\r\n                      <DeleteIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n                      Delete Conversation\r\n                    </MenuItem>\r\n                  </Menu>\r\n                </Box>\r\n                \r\n                {/* Messages area */}\r\n                <Box sx={{ \r\n                  p: 2, \r\n                  height: 'calc(70vh - 128px)', \r\n                  overflowY: 'auto',\r\n                  display: 'flex',\r\n                  flexDirection: 'column'\r\n                }}>\r\n                  {messageLoading ? (\r\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexGrow={1}>\r\n                      <CircularProgress />\r\n                    </Box>\r\n                  ) : messages.length === 0 ? (\r\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexGrow={1}>\r\n                      <Typography variant=\"body1\" color=\"text.secondary\">\r\n                        No messages yet. Start the conversation!\r\n                      </Typography>\r\n                    </Box>\r\n                  ) : (\r\n                    messages.map((msg, index) => {\r\n                      const isCurrentUser = msg.sender.id_no === user.id_no;\r\n                      \r\n                      return (\r\n                        <Box\r\n                          key={msg.message_id}\r\n                          sx={{\r\n                            display: 'flex',\r\n                            justifyContent: isCurrentUser ? 'flex-end' : 'flex-start',\r\n                            mb: 1,\r\n                          }}\r\n                        >\r\n                          <Box\r\n                            sx={{\r\n                              backgroundColor: isCurrentUser ? '#1976d2' : '#f1f1f1',\r\n                              color: isCurrentUser ? 'white' : 'inherit',\r\n                              borderRadius: 2,\r\n                              px: 2,\r\n                              py: 1,\r\n                              maxWidth: '70%',\r\n                            }}\r\n                          >\r\n                            <Typography variant=\"body1\">{msg.content}</Typography>\r\n                            <Typography variant=\"caption\" display=\"block\" sx={{ textAlign: 'right', opacity: 0.8 }}>\r\n                              {formatTimestamp(msg.timestamp)}\r\n                            </Typography>\r\n                          </Box>\r\n                        </Box>\r\n                      );\r\n                    })\r\n                  )}\r\n                  <div ref={messagesEndRef} />\r\n                </Box>\r\n                \r\n                {/* Message input */}\r\n                <Box sx={{ p: 2, borderTop: '1px solid #e0e0e0' }}>\r\n                  <form onSubmit={handleSendMessage}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs>\r\n                        <TextField\r\n                          fullWidth\r\n                          placeholder=\"Type a message\"\r\n                          variant=\"outlined\"\r\n                          value={message}\r\n                          onChange={(e) => setMessage(e.target.value)}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          endIcon={<SendIcon />}\r\n                          disabled={!message.trim()}\r\n                        >\r\n                          Send\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </form>\r\n                </Box>\r\n              </>\r\n            ) : (\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                minHeight=\"70vh\"\r\n              >\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Select a conversation\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                  Choose a conversation from the list or start a new one.\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Chats;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}