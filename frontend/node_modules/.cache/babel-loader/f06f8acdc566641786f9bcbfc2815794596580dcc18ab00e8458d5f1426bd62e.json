{"ast":null,"code":"import api from './api';\n\n// Course service functions for API calls\nconst courseService = {\n  // Get all courses\n  getAllCourses: async () => {\n    return api.get('/courses/');\n  },\n  // Get course by ID\n  getCourseById: async id => {\n    return api.get(`/courses/${id}/`);\n  },\n  // Get course students\n  getCourseStudents: async id => {\n    return api.get(`/courses/${id}/students/`);\n  },\n  // Create course (admin only)\n  createCourse: async courseData => {\n    return api.post('/courses/', courseData);\n  },\n  // Update course (admin only)\n  updateCourse: async (id, courseData) => {\n    return api.put(`/courses/${id}/`, courseData);\n  },\n  // Delete course (admin only)\n  deleteCourse: async id => {\n    return api.delete(`/courses/${id}/`);\n  },\n  // Enroll current user in course\n  enrollInCourse: async id => {\n    return api.post(`/courses/${id}/enroll/`);\n  },\n  // Unenroll current user from course\n  unenrollFromCourse: async id => {\n    return api.post(`/courses/${id}/unenroll/`);\n  },\n  // Get all enrollments\n  getAllEnrollments: async () => {\n    return api.get('/enrollments/');\n  },\n  // Create enrollment (admin only)\n  createEnrollment: async enrollmentData => {\n    return api.post('/enrollments/', enrollmentData);\n  },\n  // Delete enrollment (admin only)\n  deleteEnrollment: async id => {\n    return api.delete(`/enrollments/${id}/`);\n  }\n};\nexport default courseService;","map":{"version":3,"names":["api","courseService","getAllCourses","get","getCourseById","id","getCourseStudents","createCourse","courseData","post","updateCourse","put","deleteCourse","delete","enrollInCourse","unenrollFromCourse","getAllEnrollments","createEnrollment","enrollmentData","deleteEnrollment"],"sources":["C:/Vraj/Academics/2-2/DBMS/trial/campus-sphere/frontend/src/services/course.service.js"],"sourcesContent":["import api from './api';\r\n\r\n// Course service functions for API calls\r\nconst courseService = {\r\n  // Get all courses\r\n  getAllCourses: async () => {\r\n    return api.get('/courses/');\r\n  },\r\n  \r\n  // Get course by ID\r\n  getCourseById: async (id) => {\r\n    return api.get(`/courses/${id}/`);\r\n  },\r\n  \r\n  // Get course students\r\n  getCourseStudents: async (id) => {\r\n    return api.get(`/courses/${id}/students/`);\r\n  },\r\n  \r\n  // Create course (admin only)\r\n  createCourse: async (courseData) => {\r\n    return api.post('/courses/', courseData);\r\n  },\r\n  \r\n  // Update course (admin only)\r\n  updateCourse: async (id, courseData) => {\r\n    return api.put(`/courses/${id}/`, courseData);\r\n  },\r\n  \r\n  // Delete course (admin only)\r\n  deleteCourse: async (id) => {\r\n    return api.delete(`/courses/${id}/`);\r\n  },\r\n  \r\n  // Enroll current user in course\r\n  enrollInCourse: async (id) => {\r\n    return api.post(`/courses/${id}/enroll/`);\r\n  },\r\n  \r\n  // Unenroll current user from course\r\n  unenrollFromCourse: async (id) => {\r\n    return api.post(`/courses/${id}/unenroll/`);\r\n  },\r\n  \r\n  // Get all enrollments\r\n  getAllEnrollments: async () => {\r\n    return api.get('/enrollments/');\r\n  },\r\n  \r\n  // Create enrollment (admin only)\r\n  createEnrollment: async (enrollmentData) => {\r\n    return api.post('/enrollments/', enrollmentData);\r\n  },\r\n  \r\n  // Delete enrollment (admin only)\r\n  deleteEnrollment: async (id) => {\r\n    return api.delete(`/enrollments/${id}/`);\r\n  },\r\n};\r\n\r\nexport default courseService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,MAAMC,aAAa,GAAG;EACpB;EACAC,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,OAAOF,GAAG,CAACG,GAAG,CAAC,WAAW,CAAC;EAC7B,CAAC;EAED;EACAC,aAAa,EAAE,MAAOC,EAAE,IAAK;IAC3B,OAAOL,GAAG,CAACG,GAAG,CAAC,YAAYE,EAAE,GAAG,CAAC;EACnC,CAAC;EAED;EACAC,iBAAiB,EAAE,MAAOD,EAAE,IAAK;IAC/B,OAAOL,GAAG,CAACG,GAAG,CAAC,YAAYE,EAAE,YAAY,CAAC;EAC5C,CAAC;EAED;EACAE,YAAY,EAAE,MAAOC,UAAU,IAAK;IAClC,OAAOR,GAAG,CAACS,IAAI,CAAC,WAAW,EAAED,UAAU,CAAC;EAC1C,CAAC;EAED;EACAE,YAAY,EAAE,MAAAA,CAAOL,EAAE,EAAEG,UAAU,KAAK;IACtC,OAAOR,GAAG,CAACW,GAAG,CAAC,YAAYN,EAAE,GAAG,EAAEG,UAAU,CAAC;EAC/C,CAAC;EAED;EACAI,YAAY,EAAE,MAAOP,EAAE,IAAK;IAC1B,OAAOL,GAAG,CAACa,MAAM,CAAC,YAAYR,EAAE,GAAG,CAAC;EACtC,CAAC;EAED;EACAS,cAAc,EAAE,MAAOT,EAAE,IAAK;IAC5B,OAAOL,GAAG,CAACS,IAAI,CAAC,YAAYJ,EAAE,UAAU,CAAC;EAC3C,CAAC;EAED;EACAU,kBAAkB,EAAE,MAAOV,EAAE,IAAK;IAChC,OAAOL,GAAG,CAACS,IAAI,CAAC,YAAYJ,EAAE,YAAY,CAAC;EAC7C,CAAC;EAED;EACAW,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC7B,OAAOhB,GAAG,CAACG,GAAG,CAAC,eAAe,CAAC;EACjC,CAAC;EAED;EACAc,gBAAgB,EAAE,MAAOC,cAAc,IAAK;IAC1C,OAAOlB,GAAG,CAACS,IAAI,CAAC,eAAe,EAAES,cAAc,CAAC;EAClD,CAAC;EAED;EACAC,gBAAgB,EAAE,MAAOd,EAAE,IAAK;IAC9B,OAAOL,GAAG,CAACa,MAAM,CAAC,gBAAgBR,EAAE,GAAG,CAAC;EAC1C;AACF,CAAC;AAED,eAAeJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}