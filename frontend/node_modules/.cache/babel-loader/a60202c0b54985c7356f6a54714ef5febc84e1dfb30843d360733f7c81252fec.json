{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{jwtDecode}from'jwt-decode';import api from'../services/api';// Create auth context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// Auth provider component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Check if token exists in localStorage on component mount\nuseEffect(()=>{const checkAuth=async()=>{try{const accessToken=localStorage.getItem('accessToken');const refreshToken=localStorage.getItem('refreshToken');if(!accessToken||!refreshToken){setLoading(false);return;}// Check if access token is expired\nconst decodedToken=jwtDecode(accessToken);const currentTime=Date.now()/1000;if(decodedToken.exp<currentTime){// Token is expired, try to refresh\nawait refreshAccessToken();}else{// Token is valid, set user\nsetUser({id_no:decodedToken.user_id,user_type:decodedToken.user_type||'user'});// Update user data\nawait fetchUserData();}}catch(err){console.error('Auth check error:',err);setError('Session expired. Please login again.');logout();}finally{setLoading(false);}};checkAuth();},[]);// Fetch user data\nconst fetchUserData=async()=>{try{const response=await api.get('/users/me/');setUser(response.data);}catch(err){console.error('Error fetching user data:',err);}};// Refresh access token\nconst refreshAccessToken=async()=>{try{const refreshToken=localStorage.getItem('refreshToken');if(!refreshToken){throw new Error('No refresh token available');}const response=await api.post('/auth/token/refresh/',{refresh:refreshToken});localStorage.setItem('accessToken',response.data.access);// Update user state with decoded token\nconst decodedToken=jwtDecode(response.data.access);setUser({id_no:decodedToken.user_id,user_type:decodedToken.user_type||'user'});// Update user data\nawait fetchUserData();return response.data.access;}catch(err){console.error('Token refresh error:',err);logout();throw err;}};// Login function\nconst login=async credentials=>{try{setError(null);const response=await api.post('/auth/token/',credentials);localStorage.setItem('accessToken',response.data.access);localStorage.setItem('refreshToken',response.data.refresh);// Set user from token\nconst decodedToken=jwtDecode(response.data.access);setUser({id_no:decodedToken.user_id,user_type:decodedToken.user_type||'user'});// Fetch complete user data\nawait fetchUserData();return response.data;}catch(err){var _err$response,_err$response$data;console.error('Login error:',err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.detail)||'Login failed. Please check your credentials.');throw err;}};// Register function\nconst register=async userData=>{try{setError(null);const response=await api.post('/auth/register/',userData);return response.data;}catch(err){var _err$response2,_err$response2$data,_Object$values$,_err$response3;console.error('Registration error:',err);setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.detail)||((_Object$values$=Object.values(((_err$response3=err.response)===null||_err$response3===void 0?void 0:_err$response3.data)||{})[0])===null||_Object$values$===void 0?void 0:_Object$values$[0])||'Registration failed. Please try again.');throw err;}};// Logout function\nconst logout=()=>{localStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');setUser(null);};// Update user profile\nconst updateProfile=async userData=>{try{setError(null);const response=await api.put('/users/update_me/',userData);setUser(response.data);return response.data;}catch(err){var _err$response4,_err$response4$data,_Object$values$2,_err$response5;console.error('Profile update error:',err);setError(((_err$response4=err.response)===null||_err$response4===void 0?void 0:(_err$response4$data=_err$response4.data)===null||_err$response4$data===void 0?void 0:_err$response4$data.detail)||((_Object$values$2=Object.values(((_err$response5=err.response)===null||_err$response5===void 0?void 0:_err$response5.data)||{})[0])===null||_Object$values$2===void 0?void 0:_Object$values$2[0])||'Profile update failed. Please try again.');throw err;}};// Check if user is admin\nconst isAdmin=()=>{return(user===null||user===void 0?void 0:user.user_type)==='developer'||(user===null||user===void 0?void 0:user.user_type)==='maintainer';};// Check if user is developer\nconst isDeveloper=()=>{return(user===null||user===void 0?void 0:user.user_type)==='developer';};// Context value\nconst value={user,loading,error,setError,login,register,logout,updateProfile,refreshAccessToken,isAdmin,isDeveloper};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};// Hook to use auth context\nexport const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jwtDecode","api","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","checkAuth","accessToken","localStorage","getItem","refreshToken","decodedToken","currentTime","Date","now","exp","refreshAccessToken","id_no","user_id","user_type","fetchUserData","err","console","logout","response","get","data","Error","post","refresh","setItem","access","login","credentials","_err$response","_err$response$data","detail","register","userData","_err$response2","_err$response2$data","_Object$values$","_err$response3","Object","values","removeItem","updateProfile","put","_err$response4","_err$response4$data","_Object$values$2","_err$response5","isAdmin","isDeveloper","value","Provider","useAuth","context"],"sources":["C:/Vraj/Academics/2-2/DBMS/trial/campus-sphere/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport api from '../services/api';\r\n\r\n// Create auth context\r\nconst AuthContext = createContext();\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check if token exists in localStorage on component mount\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const accessToken = localStorage.getItem('accessToken');\r\n        const refreshToken = localStorage.getItem('refreshToken');\r\n        \r\n        if (!accessToken || !refreshToken) {\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Check if access token is expired\r\n        const decodedToken = jwtDecode(accessToken);\r\n        const currentTime = Date.now() / 1000;\r\n        \r\n        if (decodedToken.exp < currentTime) {\r\n          // Token is expired, try to refresh\r\n          await refreshAccessToken();\r\n        } else {\r\n          // Token is valid, set user\r\n          setUser({\r\n            id_no: decodedToken.user_id,\r\n            user_type: decodedToken.user_type || 'user'\r\n          });\r\n          \r\n          // Update user data\r\n          await fetchUserData();\r\n        }\r\n      } catch (err) {\r\n        console.error('Auth check error:', err);\r\n        setError('Session expired. Please login again.');\r\n        logout();\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    checkAuth();\r\n  }, []);\r\n  \r\n  // Fetch user data\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await api.get('/users/me/');\r\n      setUser(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching user data:', err);\r\n    }\r\n  };\r\n  \r\n  // Refresh access token\r\n  const refreshAccessToken = async () => {\r\n    try {\r\n      const refreshToken = localStorage.getItem('refreshToken');\r\n      \r\n      if (!refreshToken) {\r\n        throw new Error('No refresh token available');\r\n      }\r\n      \r\n      const response = await api.post('/auth/token/refresh/', {\r\n        refresh: refreshToken\r\n      });\r\n      \r\n      localStorage.setItem('accessToken', response.data.access);\r\n      \r\n      // Update user state with decoded token\r\n      const decodedToken = jwtDecode(response.data.access);\r\n      setUser({\r\n        id_no: decodedToken.user_id,\r\n        user_type: decodedToken.user_type || 'user'\r\n      });\r\n      \r\n      // Update user data\r\n      await fetchUserData();\r\n      \r\n      return response.data.access;\r\n    } catch (err) {\r\n      console.error('Token refresh error:', err);\r\n      logout();\r\n      throw err;\r\n    }\r\n  };\r\n  \r\n  // Login function\r\n  const login = async (credentials) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.post('/auth/token/', credentials);\r\n      \r\n      localStorage.setItem('accessToken', response.data.access);\r\n      localStorage.setItem('refreshToken', response.data.refresh);\r\n      \r\n      // Set user from token\r\n      const decodedToken = jwtDecode(response.data.access);\r\n      setUser({\r\n        id_no: decodedToken.user_id,\r\n        user_type: decodedToken.user_type || 'user'\r\n      });\r\n      \r\n      // Fetch complete user data\r\n      await fetchUserData();\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError(err.response?.data?.detail || 'Login failed. Please check your credentials.');\r\n      throw err;\r\n    }\r\n  };\r\n  \r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.post('/auth/register/', userData);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Registration error:', err);\r\n      setError(\r\n        err.response?.data?.detail || \r\n        Object.values(err.response?.data || {})[0]?.[0] || \r\n        'Registration failed. Please try again.'\r\n      );\r\n      throw err;\r\n    }\r\n  };\r\n  \r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n    setUser(null);\r\n  };\r\n  \r\n  // Update user profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.put('/users/update_me/', userData);\r\n      setUser(response.data);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Profile update error:', err);\r\n      setError(\r\n        err.response?.data?.detail || \r\n        Object.values(err.response?.data || {})[0]?.[0] || \r\n        'Profile update failed. Please try again.'\r\n      );\r\n      throw err;\r\n    }\r\n  };\r\n  \r\n  // Check if user is admin\r\n  const isAdmin = () => {\r\n    return user?.user_type === 'developer' || user?.user_type === 'maintainer';\r\n  };\r\n  \r\n  // Check if user is developer\r\n  const isDeveloper = () => {\r\n    return user?.user_type === 'developer';\r\n  };\r\n  \r\n  // Context value\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    setError,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    refreshAccessToken,\r\n    isAdmin,\r\n    isDeveloper\r\n  };\r\n  \r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\n// Hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}